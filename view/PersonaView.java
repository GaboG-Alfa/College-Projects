/*
 * La clase que se encarga de mostrar al usario la interfaz de selctor de archivos
 */
package view;

import controller.QuickSortController;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.AVLArbol.ArbolAVLException;
import model.AVLArbol.AvlArbol;
import model.Persona;
import model.BinarioArbol.ArbolBinario;
import model.BinarioArbol.ArbolBinarioException;

/**
 *
 * @author GABRIEL GUZMÁN ALFARO
 * @version 01/07/2021
 */
public class PersonaView extends javax.swing.JFrame {

    //Atributos
    private ArbolBinario<Persona> arbolBinario = new ArbolBinario<>();
    private AvlArbol<Persona> arbolAvl = new AvlArbol<>();
    private QuickSortController quick = new QuickSortController();
    private ArrayList<Persona> personaArray = new ArrayList<>();

    /**
     * Creates new form PersonaView
     */
    public PersonaView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_Buscar = new javax.swing.JTextArea();
        jButton_File = new javax.swing.JButton();
        jButton_Buscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_ListaPersonas = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
        jLabel1.setText("    Rendimiento de tiempo de algoritmos");

        jTextArea_Buscar.setColumns(20);
        jTextArea_Buscar.setRows(5);
        jScrollPane2.setViewportView(jTextArea_Buscar);

        jButton_File.setFont(new java.awt.Font("Droid Sans Mono Slashed for Pow", 0, 18)); // NOI18N
        jButton_File.setText("Escoger Archivo");
        jButton_File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FileActionPerformed(evt);
            }
        });

        jButton_Buscar.setText("Buscar persona por cédula");
        jButton_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BuscarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Ubuntu Mono derivative Powerlin", 1, 14)); // NOI18N
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea_ListaPersonas.setColumns(20);
        jTextArea_ListaPersonas.setRows(5);
        jScrollPane1.setViewportView(jTextArea_ListaPersonas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jButton_File, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_Buscar)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addGap(157, 157, 157))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_File, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton_Buscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @param evt 
     */
    private void jButton_FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FileActionPerformed
        // TODO add your handling code here:

        long tiempoInicioAVL;
        long tiempoFinalAVL;
        long tiempoInicioBinario;
        long tiempoFinalBinario;
        long tiempoInsertarInicioQuick;
        long tiempoInsertarFinalQuick;
        long tiempoOrdenarInicioQuick;
        long tiempoOrdenarFinalQuick;

        JFileChooser fc = new JFileChooser();
        int selection = fc.showOpenDialog(null);

        if (selection == JFileChooser.APPROVE_OPTION) {
            File ruta = fc.getSelectedFile();
            System.out.println("Archivo: " + ruta.getAbsolutePath());

            try (Scanner archivo = new Scanner(new File(ruta.getAbsolutePath()))) {
                while (archivo.hasNextLine()) {

                    String[] linea = archivo.nextLine().split(",");
                    
                    personaArray.add(new Persona( Integer.parseInt(linea[0]) , linea[1] , Integer.parseInt(linea[2])) );

                }

                //Tiempo del Avl
                tiempoInicioAVL = System.nanoTime();

                for (Persona persona : personaArray) {
                    try {
                        
                        arbolAvl.insertar(persona);
                        
                    } catch (ArbolAVLException ex) {
                        
                    
                        JOptionPane.showMessageDialog(null, "Error Árbol Avl " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    
                } catch (StackOverflowError ex) {
                            
                        JOptionPane.showMessageDialog(null, "Error Stack Árbol Avl " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }

                }

                tiempoFinalAVL = System.nanoTime();

                //Tiempo del binario
                tiempoInicioBinario = System.nanoTime();

                for (Persona persona : personaArray) {

                    try {
                        arbolBinario.insertar(persona);
                    } catch (ArbolBinarioException ex) {
                        JOptionPane.showMessageDialog(null, "Error Árbol Binario " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    } catch (StackOverflowError ex) {
                        JOptionPane.showMessageDialog(null, "Error Stack Árbol Binario " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                        break;
                    }

                }

                tiempoFinalBinario = System.nanoTime();

                //Tiempo Quick
                tiempoInsertarInicioQuick = System.nanoTime();
                quick.insertar(personaArray);
                tiempoInsertarFinalQuick = System.nanoTime();

                tiempoOrdenarInicioQuick = System.nanoTime();
                quick.ordenar();
                tiempoOrdenarFinalQuick = System.nanoTime();

                jTextArea_ListaPersonas.setText("Tiempo de completar carga en el árbol avl: " + (tiempoFinalAVL - tiempoInicioAVL) + " nanosegundos"
                        + "\n\nTiempo de completar carga en el árbol binario: " + (tiempoFinalBinario - tiempoInicioBinario) + " nanosegundos"
                        + "\n\nTiempo de completar carga en el vector: " + (tiempoInsertarFinalQuick - tiempoInsertarInicioQuick) + " nanosegundos"
                        + "\n\nTiempo de ordenar el vector con el quick sort: " + (tiempoOrdenarFinalQuick - tiempoOrdenarInicioQuick) + " nanosegundos");
            } catch (FileNotFoundException ex) {

                JOptionPane.showMessageDialog(null, "El archivo no existe " + ex, "Error", JOptionPane.ERROR_MESSAGE);

            }
        }


    }//GEN-LAST:event_jButton_FileActionPerformed

    /**
     * 
     * @param evt 
     */
    private void jButton_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BuscarActionPerformed

        //Variables
        String mensaje = "";
        long tiempoInicioAVL = 0;
        long tiempoFinalAVL = 0;
        long tiempoInicioBinario = 0;
        long tiempoFinalBinario = 0;
        long tiempoInicioQuick = 0;
        long tiempoFinalQuick = 0;

        try {
            // TODO add your handling code here:

            //Tiempo AVL
            tiempoInicioAVL = System.nanoTime();

            mensaje = "Persona encontrada en el arbol avl: " + arbolAvl.find(new Persona(Integer.parseInt(jTextArea_Buscar.getText())));

            tiempoFinalAVL = System.nanoTime();

            JOptionPane.showMessageDialog(null, mensaje, "Persona encontrada", JOptionPane.INFORMATION_MESSAGE);

            //Tiempo Binario
            tiempoInicioBinario = System.nanoTime();

            mensaje = "Persona encontrada en el arbol binario: " + arbolBinario.find(new Persona(Integer.parseInt(jTextArea_Buscar.getText())));

            tiempoFinalBinario = System.nanoTime();

            JOptionPane.showMessageDialog(null, mensaje, "Persona encontrada", JOptionPane.INFORMATION_MESSAGE);
            
            //Tiempo Binario
            tiempoInicioQuick = System.nanoTime();

            mensaje = "Persona encontrada en el vector: " + quick.busquedaBinaria(new Persona(Integer.parseInt(jTextArea_Buscar.getText())));

            tiempoFinalQuick = System.nanoTime();

            JOptionPane.showMessageDialog(null, mensaje, "Persona encontrada", JOptionPane.INFORMATION_MESSAGE);


        } catch (ArbolBinarioException ex) {
            JOptionPane.showMessageDialog(null, "Error Árbol Binario " + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }

        //Mostrar tiempos
        JOptionPane.showMessageDialog(null, "Tiempo de completar búsqueda en el árbol avl: " + (tiempoFinalAVL - tiempoInicioAVL) + " nanosegundos", "Tiempo de Búsqueda", JOptionPane.WARNING_MESSAGE);
        JOptionPane.showMessageDialog(null, "Tiempo de completar búsqueda en el árbol binario: " + (tiempoFinalBinario - tiempoInicioBinario) + " nanosegundos", "Tiempo de Búsqueda", JOptionPane.WARNING_MESSAGE);
        JOptionPane.showMessageDialog(null, "Tiempo de completar búsqueda en el vector: " + (tiempoFinalQuick - tiempoInicioQuick) + " nanosegundos", "Tiempo de Búsqueda", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton_BuscarActionPerformed

    /**
     * 
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Buscar;
    private javax.swing.JButton jButton_File;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_Buscar;
    private javax.swing.JTextArea jTextArea_ListaPersonas;
    // End of variables declaration//GEN-END:variables
}
